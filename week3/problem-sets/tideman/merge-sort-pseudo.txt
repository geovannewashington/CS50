visual: https://www.hackerearth.com/practice/algorithms/sorting/merge-sort/visualize/

procedure mergeSort(array A, left, right)
    if left < right
        mid = (left + right) / 2
        mergeSort(A, left, mid)
        mergeSort(A, mid + 1, right)
        merge(A, left, mid, right)
    end if
end procedure

procedure merge(array A, left, mid, right)
    // Create temporary arrays for the left and right halves
    size_left = mid - left + 1
    size_right = right - mid

    create array L[size_left]
    create array R[size_right]

    // Copy data to temporary arrays L[] and R[]
    for i from 0 to size_left - 1
        L[i] = A[left + i]
    end for
    for j from 0 to size_right - 1
        R[j] = A[mid + 1 + j]
    end for

    // Merge the temporary arrays back into A[left...right]
    i = 0 // Initial index of first subarray
    j = 0 // Initial index of second subarray
    k = left // Initial index of merged subarray

    while i < size_left and j < size_right
        if L[i] <= R[j]
            A[k] = L[i]
            i = i + 1
        else
            A[k] = R[j]
            j = j + 1
        end if
        k = k + 1
    end while

    // Copy the remaining elements of L[], if any
    while i < size_left
        A[k] = L[i]
        i = i + 1
        k = k + 1
    end while

    // Copy the remaining elements of R[], if any
    while j < size_right
        A[k] = R[j]
        j = j + 1
        k = k + 1
    end while
end procedure
